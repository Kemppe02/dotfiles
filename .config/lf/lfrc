set ratios 1:2:3
# Show hidden files
set hidden false

set ignorecase true
set icons true

set cursorpreviewfmt "\033[7;2m"

set scrolloff 10

# Unset default mapping
map m
map q

# Map functions
map q quit
map <enter> shell
map a mark-save
map c clear
map md makeDir
map mf makeFile
map <c-r> reload
map DD delete
map xq $$SHELL # auto cd and quit
map w wall
map xt extract
map . set hidden!
map b bulk-rename
map r :rename; cmd-delete-home
map mn mount-server

# Map movements
map gd cd ~/downloads
map gD cd ~/documents
map gi cd ~/images
map gv cd ~/videos
map gs cd ~/school
map gu cd /run/media/axel
map gm cd /mnt/ubserver

# Rename file
#cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

# Delete file using Cowsay program
cmd delete ${{
	/home/axel/.config/lf/cowDelete.sh $fx
}}

# Create directory
cmd makeDir ${{
	printf "Directory Name: "
	read ans
	mkdir $ans
}}

# Create file
cmd makeFile ${{
	printf "Filename: "
	read ans
	touch $ans
}}

# Unarchive using correct tool
cmd extract ${{
	case "$f" in
		*.zip) unzip "$f" ;;
		*.tar.gz) tar -xzvf "$f" ;;
		*.tar.bz2) tar -xjvf "$f" ;;
		*.tar) tar -xvf "$f" ;;
		*) echo "Unsupported format" ;;
	esac
}}

# Change wallpaper

set shellopts '-eu'
set ifs "\n"

cmd wall ${{
	case "$f" in
		*.jpg) swww img "$f" --transition-type random ;;
		*.png) swww img "$f" --transition-type random ;;
		*.jpeg) swww img "$f" --transition-type random ;;
		*.gif) swww img "$f" --transition-type random ;;
		*) echo "Unsupported format" ;;
	esac
}}

cmd bulk-rename ${{
	EDITOR=vim; export EDITOR # Had to add this line otherwise it defaults to vi
    old="$(mktemp)"
    new="$(mktemp)"
    if [ -n "$fs" ]; then
        fs="$(basename -a -- $fs)"
    else
        fs="$(ls)"
    fi
    printf '%s\n' "$fs" > "$old"
    printf '%s\n' "$fs" > "$new"
    $EDITOR "$new"
    [ "$(wc -l < "$new")" -ne "$(wc -l < "$old")" ] && exit
    paste "$old" "$new" | while IFS= read -r names; do
        src="$(printf '%s' "$names" | cut -f1)"
        dst="$(printf '%s' "$names" | cut -f2)"
        if [ "$src" = "$dst" ] || [ -e "$dst" ]; then
            continue
        fi
        mv -- "$src" "$dst"
    done
    rm -- "$old" "$new"
    lf -remote "send $id unselect"
}}

cmd mount-server ${{
	sudo sshfs -o allow_other,default_permissions axel@192.168.3.17:/media /mnt/ubserver
}}
